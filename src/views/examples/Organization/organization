import React, { useState, useEffect } from 'react'

import {
  Button,
  Card,
  CardHeader,
  CardBody,
  FormGroup,
  Form,
  Input,
  Container,
  Row,
  Col,
  Modal, ModalHeader, ModalBody, ModalFooter
} from "reactstrap";
import Header from "components/Headers/Header.js";
export default function OrganizationAdd() {
  const [Onorganizationname, setorganizationname] = useState("")
  const [OnAddress, setAddress] = useState("");
  const [DefaultContactName, setDefaultContactName] = useState("")
  const [Defaultemail, setDefaultemail] = useState("")
  const [phone, setphone] = useState()
  const [DefaultDesignation, setDefaultDesignation] = useState("")
  // contact modal
  const [modalContactPersonname, setmodalContactPersonname] = useState("")
  const [ModalContactEmailId, setModalContactEmailId] = useState("")
  const [ModalDesignation, setModalDesignation] = useState("")
  const [ModalPhone, setModalPhone] = useState()
  const [ContactArray, setContactArray] = useState([])
  const [modal, setmodal] = useState(false)
  const [modal1, setmodal1] = useState(false)
  const [onChange, setonChange] = useState(true)
  const [tempvalue, settempvalue] = useState("")
  const [AllValues, setAllValues] = useState([])
  //update contact modal
  const [UpdatecontactEmail, setUpdatecontactEmail] = useState("")
  const [Updatecontactname, setUpdatecontactname] = useState("")
  const [UpdatecontactPhonenumber, setUpdatecontactPhonenumber] = useState("")
  const [Updatecontactdesignation, setUpdatecontactdesignation] = useState("")
  // notificTION modal
  const [modalNotificationContactPersonname, setmodalNotificationContactPersonname] = useState("")
  const [modalNotificationContactPersonemail, setmodalNotificationContactPersonemail] = useState("")
  const [modalNotificationContactPersonDesignation, setmodalNotificationContactPersonDesignation] = useState("")
  const [modalNotificationContactPersonnumber, setmodalNotificationContactPersonnumber] = useState()
  const [notificationarray, setnotificationarray] = useState([])
  const [tempNotify, settempNotify] = useState("")
  // Static notification
  const [NotificationPerson, setNotificationPerson] = useState("")
  const [NotificationEmail, setNotificationEmail] = useState("")
  const [NotificationDesignation, setNotificationDesignation] = useState("")
  const [NotificationPhone, setNotificationPhone] = useState()
  //Update Notification
  const [UpdateNotificationPerson, setUpdateNotificationPerson] = useState("")
  const [UpdateNotificationEmail, setUpdateNotificationEmail] = useState("")
  const [UpdateNotificationDesignation, setUpdateNotificationDesignation] = useState("")
  const [UpdateNotificationPhone, setUpdateNotificationPhone] = useState()
  const [userprofilechange, setuserprofilechange] = useState("")
  const [userprofile, setuserprofile] = useState([])
  const [FindedData, setFindedData] = useState([])
  //add functionality
  let ProfileFind = (e) => {
    console.log("Ã¯nn")
    setuserprofilechange(e)
    let Finddeviceprofile = userprofile.find((value, i) => value.user_profile_name === e);
    setFindedData(Finddeviceprofile.custom_data)
    console.log("this is the finded data", Finddeviceprofile)
  }
  let toggle = () => {
    setmodal(!modal);
  }
  let AddContactModal = () => {
    let createObj = { contactperson: modalContactPersonname, contactEmail: ModalContactEmailId, contactDesignation: ModalDesignation, contactPhone: ModalPhone }
    setContactArray((oldvalues) => {
      return [...oldvalues, createObj]
    })
  }
  let editContactPerson = (id) => {
    settempvalue(id)
    setonChange(false)
    let Finddeviceprofile = ContactArray.find((value, i) => value.contactEmail === id);
    console.log("console", Finddeviceprofile)
    setUpdatecontactEmail(Finddeviceprofile.contactEmail)
    setUpdatecontactname(Finddeviceprofile.contactperson)
    setUpdatecontactPhonenumber(Finddeviceprofile.contactPhone)
    setUpdatecontactdesignation(Finddeviceprofile.contactDesignation)
  }
  let cancelOrganiziation = () => {
    settempvalue("")
  }
  let updateOrganiiziation = () => {
    setContactArray(ContactArray.map((element) => {
      if (element.contactEmail === tempvalue) {
        return { ...element, contactperson: Updatecontactname, contactEmail: UpdatecontactEmail, contactDesignation: Updatecontactdesignation, contactPhone: UpdatecontactPhonenumber }
      }
      return element;
    }))
    settempvalue("")
  }
  //Notification
  let toggle1 = () => {
    setmodal1(!modal1);
  }
  let AddNotificationModal = () => {
    let createObj = { Notificationcontactperson: modalNotificationContactPersonname, NotificationcontactEmail: modalNotificationContactPersonemail, NotificationcontactDesignation: modalNotificationContactPersonDesignation, NotificationcontactPhone: modalNotificationContactPersonnumber }
    setnotificationarray((oldvalues) => {
      return [...oldvalues, createObj]
    })
  }
  //notify edit
  let editNotificationPerson = (id) => {
    let Finddeviceprofile = notificationarray.find((value, i) => value.NotificationcontactEmail === id);
    console.log("finded", Finddeviceprofile)
    settempNotify(Finddeviceprofile.NotificationcontactEmail)
    // let createObj = { Notificationcontactperson: modalNotificationContactPersonname, NotificationcontactEmail: modalNotificationContactPersonemail, NotificationcontactDesignation: modalNotificationContactPersonDesignation, NotificationcontactPhone: modalNotificationContactPersonnumber }
    setUpdateNotificationPerson(Finddeviceprofile.Notificationcontactperson)
    setUpdateNotificationEmail(Finddeviceprofile.NotificationcontactEmail)
    setUpdateNotificationDesignation(Finddeviceprofile.NotificationcontactDesignation)
    setUpdateNotificationPhone(Finddeviceprofile.NotificationcontactPhone)
  }
  //Notify Update
  let UpdateNotification = () => {
    setnotificationarray(notificationarray.map((element) => {
      if (element.NotificationcontactEmail === tempNotify) {
        return { ...element, Notificationcontactperson: UpdateNotificationPerson, NotificationcontactEmail: UpdateNotificationEmail, NotificationcontactDesignation: UpdateNotificationDesignation, NotificationcontactPhone: UpdateNotificationPhone }
      }
      return element;
    }))
    settempNotify("")
  }
  let NotifyCancel = () => {
    settempNotify("")
  }
  useEffect(() => {
    fetch("http://127.0.0.1:8088/api/v1/user-profile").then((result) => {
      result.json().then((resp) => {
        console.log("user-profile", resp);
        setuserprofile(resp)

      })
    })
  }, [])
  const [users, setusers] = useState([])
  const [secondaryUser, setsecondaryUser] = useState([])
  useEffect(() => {
    fetch("http://127.0.0.1:8088/api/v1/user").then((result) => {
      result.json().then((resp) => {
        console.log("user", resp);
        setusers(resp)
        setsecondaryUser(resp)
      })
    })
  }, [])
  //Primary user Array
  const [PrimaryUser, setPrimaryUser] = useState([])
  const [primartState, setPrimaryState] = useState("")
  let OnprimaryUser = (e) => {
    setPrimaryState("")
    console.log("e", e)
    let Finddeviceprofile = users.find((value, i) => value.username === e);
    console.log("finded value", Finddeviceprofile)
    let primaryObj = { id: Finddeviceprofile.user_id, username: Finddeviceprofile.username };
    PrimaryUser.find(vendor => vendor['id'] === Finddeviceprofile.user_id) !== undefined ? window.alert("User already exists") :
      setPrimaryUser((oldvalues) => {
        return [...oldvalues, primaryObj]
      })
    console.log("oldvalue", PrimaryUser)
  }
  useEffect(() => {
    console.log("secondary user", PrimaryUser)
    PrimaryUser.forEach((word) => {
      console.log("word", word)
      setsecondaryUser(secondaryUser.filter((value, i) => value.user_id !== word.id))
      // console.log("result", result)
    })
  }, [PrimaryUser])
  // general user
  const [generalUser, setgeneralUser] = useState([])

  let OngeneralUser = (e) => {
    let Finddeviceprofile = secondaryUser.find((value, i) => value.username === e);
    let generalObj = { id: Finddeviceprofile.user_id, username: Finddeviceprofile.username };
    // generalUser.id.includes(Finddeviceprofile.user_id)
    generalUser.find(vendor => vendor['id'] === Finddeviceprofile.user_id) !== undefined ? window.alert("User already exists") :
      setgeneralUser((oldvalues) => {
        return [...oldvalues, generalObj]
      })
  }
  useEffect(() => {
    // console.log("secondary user", PrimaryUser)
    generalUser.forEach((word) => {
      console.log("word", word)
      setusers(users.filter((value, i) => value.user_id !== word.id))
      // console.log("result", result)
    })
  }, [generalUser])
  //delete primary user
  let OndeletePrimaryUser = (e) => {
    let Finddeviceprofile = users.find((value, i) => {
      console.log("valuesss", value)
      return value.user_id === e
    });
    console.log("deleting", Finddeviceprofile)
    // console.log("Ondelete primary user")
    setPrimaryUser((PrimaryUser) => {
      return PrimaryUser.filter((value, i) => value.id !== e);
    });
    console.log("e", e)
    setsecondaryUser((oldvalues) => {
      return [...oldvalues, Finddeviceprofile]
    })
  }
  //delete general user
  let OndeletegeneralUser = (e) => {
    let Finddeviceprofile = secondaryUser.find((value, i) => {
      console.log("valuesss", value)
      return value.user_id === e
    });
    setgeneralUser((generalUser) => {
      return generalUser.filter((value, i) => value.id !== e);
    });
    setusers((oldvalues) => {
      return [...oldvalues, Finddeviceprofile]
    })
  }

  //send all data
  const [additionalFieldsArray, setadditionalFieldsArray] = useState([])
  const [userprofileArray, setuserprofileArray] = useState([])
  //Onsubmit action
  const [AdditionalArray, setAdditionalArray] = useState([])
  const [createFinalObj, setcreateFinalObj] = useState()
  useEffect(() => {
    let createcontactPersonObj = {
      contactName: DefaultContactName, contactemail: Defaultemail, contactDesignation: DefaultDesignation, contactphone: phone
    }
    let createNotificationContactObj = {
      NotifycontactName: NotificationPerson, Notifycontactemail: NotificationEmail, NotifycontactDesignation: NotificationDesignation, Notifycontactphone: NotificationPhone
    }

    

    setcreateFinalObj({
      created_by: "test", updated_by: "test", organization_logo: iconimg, organization_name: Onorganizationname, address: OnAddress,
      contact_person: createcontactPersonObj, notification_profile: createNotificationContactObj, additional_contacts: [{
        AdditionalContactObjects: ContactArray,
        AdditionalNotificationObjects: notificationarray
      }],
      organization_profile: null, user_profile: FindedData
    })
  }, [ContactArray, notificationarray,
    DefaultContactName,
    Defaultemail,
    DefaultDesignation,
    phone,
    NotificationPerson,
    NotificationEmail,
    NotificationDesignation,
    NotificationPhone
  ])
  let onSubmit = () => {
    fetch("http://127.0.0.1:8088/api/v1/organization", {
      method: 'POST',
      headers: { "content-type": "application/json" },
      body: JSON.stringify(createFinalObj)
    }).then((result) => {
      result.json().then((resp) => {
        console.log("resp", resp);
        console.log("success")
        console.log("resp", resp);
        let createObj = {
          updated_by: "testresp",
          organization: resp,
          roles: "primary"
        }
        let creategeneralObj = {
          updated_by: "testresp",
          organization: resp,
          roles: "general"
        }
        generalUser.forEach((data) => {
          console.log("nn")
          fetch(`http://127.0.0.1:8088/api/v1/edit-user-organization-role/${data.id}`, {
            method: 'PATCH',
            headers: { "content-type": "application/json" },
            body: JSON.stringify(creategeneralObj)
          }).then((result) => {
            result.json().then((resp) => {
              console.log("secondary", resp);
            })
          })
        })
        PrimaryUser.forEach((primaryData) => {
          console.log("mm")
          fetch(`http://127.0.0.1:8088/api/v1/edit-user-organization-role/${primaryData.id}`, {
            method: 'PATCH',
            headers: { "content-type": "application/json" },
            body: JSON.stringify(createObj)
          }).then((result) => {
            result.json().then((resp) => {
              console.log("primary", resp);
            })
          })
        })
      })
    })
  }
  const [iconimg, seticonimg] = useState("")
  return (
    <>
      <Header />
      <div>
        <Modal size="lg" isOpen={modal} toggle={toggle} >
          <ModalHeader toggle={toggle}>Add Contact Persons</ModalHeader>
          <ModalBody>
            <div className="pl-lg-4">
              <Row>
                <Col lg="6">
                  <FormGroup>
                    <label
                      className="form-control-label"
                      htmlFor="input-username"
                    >
                      Contact Person Name
                    </label>
                    <Input
                      className="form-control-alternative text-dark"
                      onChange={e => setmodalContactPersonname(e.target.value)} value={modalContactPersonname}
                      id="input-username"
                      placeholder="Contact Person Name"
                      type="text"
                    />
                  </FormGroup>
                </Col>
                <Col lg="6">
                  <FormGroup>
                    <label
                      className="form-control-label"
                      htmlFor="input-email"
                    >
                      Email address
                    </label>
                    <Input
                      className="form-control-alternative text-dark"
                      id="input-email"
                      placeholder="jesse@example.com"
                      type="email"
                      value={ModalContactEmailId} onChange={e => setModalContactEmailId(e.target.value)}
                    />
                  </FormGroup>
                </Col>
              </Row>
              <Row>
                <Col lg="6">
                  <FormGroup>
                    <label
                      className="form-control-label"
                      htmlFor="input-first-name"
                    >
                      Designation
                    </label>
                    <Input
                      className="form-control-alternative text-dark"
                      onChange={e => setModalDesignation(e.target.value)} value={ModalDesignation}
                      id="input-first-name"
                      placeholder=" Designation"
                      type="text"
                    />
                  </FormGroup>
                </Col>
                <Col lg="6">
                  <FormGroup>
                    <label
                      className="form-control-label"
                      htmlFor="input-last-name"
                    >
                      Phone Number
                    </label>
                    <Input
                      className="form-control-alternative text-dark"
                      id="input-last-name"
                      placeholder="9025478002"
                      type="text"
                      onChange={e => setModalPhone(e.target.value)} value={ModalPhone}
                    />
                  </FormGroup>
                </Col>

              </Row>
              {
                ContactArray.map((item, index) => {
                  return <>
                    <div className="row" key={index} >

                      <div className="col-md-3">
                        <label className="form-control-label">{item.contactperson}</label>
                      </div>
                      <div className="col-md-3">
                        <label className="form-control-label">{item.contactEmail}</label>
                      </div>
                      <div className="col-md-3">
                        <label className="form-control-label">{item.contactDesignation}</label>
                      </div>
                      <div className="col-md-3">
                        <label className="form-control-label">{item.contactPhone}</label>
                      </div>
                    </div>
                  </>
                })
              }
              <Row>
                <Col>
                  <Button
                    color="warning"
                    onClick={AddContactModal}
                  >
                    Add
                  </Button>
                </Col>
              </Row>
            </div>
          </ModalBody>
          <ModalFooter>
            <Button color="primary" onClick={toggle}>save</Button>{' '}
            <Button color="secondary" onClick={toggle}>Cancel</Button>
          </ModalFooter>
        </Modal>
      </div>
      <div>
        <Modal size="lg" isOpen={modal1} toggle={toggle1} >
          <ModalHeader toggle={toggle1}><b><h3>Add Notification Contact</h3></b></ModalHeader>
          <ModalBody>
            <div className="pl-lg-4  ">
              <Row>
                <Col lg="6">
                  <FormGroup>
                    <label
                      className="form-control-label"
                      htmlFor="input-username"
                    >
                      Contact Person Name
                    </label>
                    <Input
                      className="form-control-alternative text-dark"
                      onChange={e => setmodalNotificationContactPersonname(e.target.value)} value={modalNotificationContactPersonname}
                      id="input-username"
                      placeholder="Contact Person Name"
                      type="text"
                    />
                  </FormGroup>
                </Col>
                <Col lg="6">
                  <FormGroup>
                    <label
                      className="form-control-label"
                      htmlFor="input-email"
                    >
                      Email address
                    </label>
                    <Input
                      className="form-control-alternative text-dark"
                      id="input-email"
                      onChange={e => setmodalNotificationContactPersonemail(e.target.value)} value={modalNotificationContactPersonemail}
                      placeholder="jesse@example.com"
                      type="email"
                    />
                  </FormGroup>
                </Col>
              </Row>
              <Row>
                <Col lg="6">
                  <FormGroup>
                    <label
                      className="form-control-label"
                      htmlFor="input-first-name"
                    >
                      Designation
                    </label>
                    <Input
                      className="form-control-alternative text-dark"
                      onChange={e => setmodalNotificationContactPersonDesignation(e.target.value)} value={modalNotificationContactPersonDesignation}
                      id="input-first-name"
                      placeholder=" Designation"
                      type="text"
                    />
                  </FormGroup>
                </Col>
                <Col lg="6">
                  <FormGroup>
                    <label
                      className="form-control-label"
                      htmlFor="input-last-name"
                    >
                      Phone Number
                    </label>
                    <Input
                      className="form-control-alternative text-dark"
                      id="input-last-name"
                      onChange={e => setmodalNotificationContactPersonnumber(e.target.value)} value={modalNotificationContactPersonnumber}
                      placeholder="9025478002"
                      type="text"
                    />
                  </FormGroup>
                </Col>

              </Row>
              {
                notificationarray.map((item, index) => {

                  return <>
                    <div className="row">
                      <div className="col-md-3">
                        <label>{item.Notificationcontactperson}</label>
                      </div>
                      <div className="col-md-3">
                        <label>{item.NotificationcontactEmail}</label>
                      </div>
                      <div className="col-md-3">
                        <label>{item.NotificationcontactDesignation}</label>
                      </div>
                      <div className="col-md-3">
                        <label>{item.NotificationcontactPhone}</label>
                      </div>
                    </div></>
                })
              }
              <Row>
                <Col>
                  <Button
                    color="warning"
                    onClick={AddNotificationModal}
                  >
                    Add
                  </Button>
                </Col>
              </Row>
            </div>
          </ModalBody>
          <ModalFooter>
            <Button color="primary" onClick={toggle1}>save</Button>{' '}
            <Button color="secondary" onClick={toggle1}>Cancel</Button>
          </ModalFooter>
        </Modal>
      </div>
      <Container className="mt--5" fluid>
        <Row>
          <Col className="order-xl-2 mb-5 mb-xl-0" xl="4">
            <Card className=" shadow" style={{ height: "400px" }}>
              <CardBody className="pt-0 pt-md-4">
                <Row>
                  <div className="col">
                    <input type="file" className="" onChange={e => seticonimg(URL.createObjectURL(e.target.files[0]))} placeholder='Update the Icon' id="" />
                  </div>
                </Row>
              </CardBody>
            </Card>
          </Col>
          <Col className="order-xl-1" xl="8">
            <Card className="bg-secondary shadow">
              <CardHeader className="bg-white border-0">
                <Row className="align-items-center">
                  <Col xs="6">
                    <FormGroup>
                      <label
                        className="form-control-label"
                        htmlFor="input-username"
                      >
                        Organization Name
                      </label>
                      <Input
                        className="form-control-alternative"
                        value={Onorganizationname} onChange={e => { setorganizationname(e.target.value) }}
                        id="input-username"
                        placeholder="      Organization Name"
                        type="text"
                      />
                    </FormGroup>
                  </Col>
                  <Col className="" xs="6">
                    <FormGroup>
                      <label
                        className="form-control-label"
                        htmlFor="input-username"
                      >
                        Address
                      </label>
                      <Input
                        className="form-control-alternative"
                        value={OnAddress} onChange={e => setAddress(e.target.value)}
                        id="input-username"
                        placeholder="Address"
                        type="textarea"
                      />
                    </FormGroup>
                  </Col>
                </Row>
              </CardHeader>

              <CardBody>
                <Form >
                  {/* <h1 className="heading text-dark mt--5 mb-3">
                    Contact Persons
                  </h1> */}
                  <Row className="align-items-center">
                    <Col xs="6">
                      <h1 className="heading text-dark mt--5 mb-3">
                        Contact Persons
                      </h1>
                    </Col>
                    <Col className="text-right mt--6 mb-1" xs="6">
                      <Button
                        color="primary"
                        onClick={toggle}
                      // size="xs"
                      >
                        Add
                      </Button>
                    </Col>
                  </Row>
                  <div className="pl-lg-4">
                    <Row>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-username"
                          >
                            Contact Person Name
                          </label>
                          <Input
                            className="form-control-alternative text-dark"
                            onChange={e => setDefaultContactName(e.target.value)} value={DefaultContactName}
                            id="input-username"
                            placeholder="Contact Person Name"
                            type="text"
                          />
                        </FormGroup>
                      </Col>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-email"
                          >
                            Email address
                          </label>
                          <Input
                            className="form-control-alternative text-dark"
                            id="input-email"
                            onChange={e => setDefaultemail(e.target.value)} value={Defaultemail}
                            placeholder="jesse@example.com"
                            type="email"
                          />
                        </FormGroup>
                      </Col>
                    </Row>
                    <Row>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-first-name"
                          >
                            Designation
                          </label>
                          <Input
                            className="form-control-alternative text-dark"
                            onChange={e => setDefaultDesignation(e.target.value)} value={DefaultDesignation}
                            id="input-first-name"
                            placeholder=" Designation"
                            type="text"
                          />
                        </FormGroup>
                      </Col>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-last-name"
                          >
                            Phone Number
                          </label>
                          <Input
                            className="form-control-alternative text-dark"
                            id="input-last-name"
                            onChange={e => setphone(e.target.value)} value={phone}
                            placeholder="9025478002"
                            type="text"
                          />
                        </FormGroup>
                      </Col>
                    </Row></div>
                    {
                      ContactArray.map((item, index) => {

                        return <>
                          <hr />
                    <Row className="align-items-center">
                    <Col className="text-right mt--6 mb-1" xs="12">
                    {item.contactEmail === tempvalue ? <>
                                <button className='btn btn-success btn-sm float-right' onClick={updateOrganiiziation}>update</button>
                                <button className='btn btn-sm float-right ' onClick={cancelOrganiziation}>Cancel</button></> :
                                <button className='btn btn-primary btn-sm float-right' onClick={() => editContactPerson(item.contactEmail)}>Edit</button>}
                    </Col>
                  </Row>
                  {item.contactEmail === tempvalue ?
                              <>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        {index + 2} Contact person name
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        onChange={e => setUpdatecontactname(e.target.value)} value={Updatecontactname}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Contact Person email
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        onChange={e => setUpdatecontactEmail(e.target.value)} type='email' value={UpdatecontactEmail}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        Designation
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        onChange={e => setUpdatecontactdesignation(e.target.value)} value={Updatecontactdesignation}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Phone Number
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        onChange={e => setUpdatecontactPhonenumber(e.target.value)} value={UpdatecontactPhonenumber}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>
                              </> : <>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        {index + 2} Contact person name
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        onChange={e => setUpdatecontactname(e.target.value)} value={Updatecontactname}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Contact Person email
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        onChange={e => setUpdatecontactEmail(e.target.value)} type='email' value={UpdatecontactEmail}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        Designation
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        onChange={e => setUpdatecontactdesignation(e.target.value)} value={Updatecontactdesignation}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Phone Number
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        onChange={e => setUpdatecontactPhonenumber(e.target.value)} value={UpdatecontactPhonenumber}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>

                              </>}

                        </>
                      })
                    }
                  
                    {/* {
                      ContactArray.map((item, index) => {

                        return <>
                          <hr />
                          <Row>
                            <Col md="12">
                              {item.contactEmail === tempvalue ? <>
                                <button className='btn btn-success btn-sm float-right' onClick={updateOrganiiziation}>update</button>
                                <button className='btn btn-sm float-right ' onClick={cancelOrganiziation}>Cancel</button></> :
                                <button className='btn btn-primary btn-sm float-right' onClick={() => editContactPerson(item.contactEmail)}>Edit</button>}
                            </Col>
                            {item.contactEmail === tempvalue ?
                              <>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        {index + 2} Contact person name
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        onChange={e => setUpdatecontactname(e.target.value)} value={Updatecontactname}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Contact Person email
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        onChange={e => setUpdatecontactEmail(e.target.value)} type='email' value={UpdatecontactEmail}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        Designation
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        onChange={e => setUpdatecontactdesignation(e.target.value)} value={Updatecontactdesignation}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Phone Number
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        onChange={e => setUpdatecontactPhonenumber(e.target.value)} value={UpdatecontactPhonenumber}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>
                              </> : <>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        {index + 2} Contact person name
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        onChange={e => setUpdatecontactname(e.target.value)} value={Updatecontactname}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Contact Person email
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        onChange={e => setUpdatecontactEmail(e.target.value)} type='email' value={UpdatecontactEmail}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        Designation
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        onChange={e => setUpdatecontactdesignation(e.target.value)} value={Updatecontactdesignation}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Phone Number
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        onChange={e => setUpdatecontactPhonenumber(e.target.value)} value={UpdatecontactPhonenumber}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>

                              </>}

                          </Row></>
                      })
                    } */}
                  
                  <hr className="my-4" />
                </Form>
              </CardBody>
              <CardBody >
                <Form>
                  <Row className="align-items-center">
                    <Col xs="6">
                      <h1 className="heading text-dark mt--5 mb-3">
                        Notification Contacts
                      </h1>
                    </Col>
                    <Col className="text-right mt--6 mb-1" xs="6">
                      <Button
                        color="primary"
                        // size="xs"
                        onClick={toggle1}
                      >
                        Add
                      </Button>
                    </Col>
                  </Row>
                  {/* <h1 className="heading text-dark mt--5 mb-3">
                    Notification Contacts
                  </h1> */}
                  <div className="pl-lg-4">
                    <Row>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-username"
                          >
                            Contact Person Name
                          </label>
                          <Input
                            className="form-control-alternative text-dark"
                            value={NotificationPerson} onChange={e => setNotificationPerson(e.target.value)}
                            id="input-username"
                            placeholder="Contact Person Name"
                            type="text"
                          />
                        </FormGroup>
                      </Col>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-email"
                          >
                            Email address
                          </label>
                          <Input
                            className="form-control-alternative text-dark"
                            id="input-email"
                            value={NotificationEmail} onChange={e => setNotificationEmail(e.target.value)}
                            placeholder="jesse@example.com"
                            type="email"
                          />
                        </FormGroup>
                      </Col>
                    </Row>
                    <Row>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-first-name"
                          >
                            Designation
                          </label>
                          <Input
                            className="form-control-alternative text-dark"
                            value={NotificationDesignation} onChange={e => setNotificationDesignation(e.target.value)}
                            id="input-first-name"
                            placeholder=" Designation"
                            type="text"
                          />
                        </FormGroup>
                      </Col>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-last-name"
                          >
                            Phone Number
                          </label>
                          <Input
                            className="form-control-alternative text-dark"
                            id="input-last-name"
                            value={NotificationPhone} onChange={e => setNotificationPhone(e.target.value)}
                            placeholder="9025478002"
                            type="text"
                          />
                        </FormGroup>
                      </Col>
                    </Row>

                    {
                      notificationarray.map((item, index) => {

                        return <>
                          <hr />
                          <Row>
                              <Col className="text-right " xs="12">
                              {item.NotificationcontactEmail === tempNotify ?
                                <>
                                  <button className='btn btn-success btn-sm float-right' onClick={UpdateNotification}>update</button>
                                  <button className='btn btn-sm float-right' onClick={NotifyCancel}>Cancel</button></> :
                                <button className='btn btn-primary btn-sm float-right' onClick={() => editNotificationPerson(item.NotificationcontactEmail)}>Edit</button>}
                              </Col>
                            {item.NotificationcontactEmail === tempNotify ?
                              <>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        {index + 2} Notification Contact person name
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        value={UpdateNotificationPerson} onChange={e => setUpdateNotificationPerson(e.target.value)}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Notification Contact person emailid
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        value={UpdateNotificationEmail} onChange={e => setUpdateNotificationEmail(e.target.value)}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        Notification person Designation
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        value={UpdateNotificationDesignation} onChange={e => setUpdateNotificationDesignation(e.target.value)}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Notification  person Phone Number
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        value={UpdateNotificationPhone} onChange={e => setUpdateNotificationPhone(e.target.value)}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row></>
                              : <>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        {index + 2} Notification Contact person name
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        value={UpdateNotificationPerson} onChange={e => setUpdateNotificationPerson(e.target.value)}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Notification Contact person emailid
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        value={UpdateNotificationEmail} onChange={e => setUpdateNotificationEmail(e.target.value)}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>
                                <Row>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-first-name"
                                      >
                                        Notification person Designation
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        value={UpdateNotificationDesignation} onChange={e => setUpdateNotificationDesignation(e.target.value)}
                                        id="input-first-name"
                                        placeholder=" Designation"
                                        type="text"
                                      />
                                    </FormGroup>
                                  </Col>
                                  <Col lg="6">
                                    <FormGroup>
                                      <label
                                        className="form-control-label"
                                        htmlFor="input-last-name"
                                      >
                                        Notification  person Phone Number
                                      </label>
                                      <Input
                                        className="form-control-alternative text-dark"
                                        id="input-last-name"
                                        value={UpdateNotificationPhone} onChange={e => setUpdateNotificationPhone(e.target.value)}
                                        placeholder="9025478002"

                                      />
                                    </FormGroup>
                                  </Col>
                                </Row>

                              </>}

                          </Row></>
                      })
                    }
                  </div>
                  <hr className="my-4" />
                  <div className="pl-lg-4">
                    <Row>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-username"
                          >
                            Primary Users
                          </label>
                          <Input type="select" onChange={e => OnprimaryUser(e.target.value)} className='text-dark' name="select" id="exampleSelect">
                            <option value="" selected disabled>Select primary User</option>
                            {users.map((item, index) => {
                              // {console.log("option",item.parameter)}
                              return <>
                                <option key={index} value={item.username} className='text-dark'>{item.username}</option>
                              </>
                            })
                            }

                          </Input>
                          {
                            PrimaryUser.map((item, index) => {

                              return <p
                                key={index}
                                className="form-control-label"
                                htmlFor="input-country"
                              >
                                {index + 1 + ")"} {item.username} <i class="fa fa-trash text-danger ml-3" onClick={() => OndeletePrimaryUser(item.id)}></i>
                              </p>
                            })
                          }
                        </FormGroup>
                      </Col>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-email"
                          >
                            General Users
                          </label>
                          <Input type="select" onChange={e => OngeneralUser(e.target.value)} className='text-dark' name="select" id="exampleSelect">

                            <option value="" selected disabled>Select General User</option>
                            {secondaryUser.map((item, index) => {

                              // {console.log("option",item.parameter)}
                              return <>
                                <option key={index} value={item.username} className='text-dark'>{item.username}</option>
                              </>
                            })
                            }

                          </Input>
                          {
                            generalUser.map((item, index) => {

                              return <p
                                key={index}
                                className="form-control-label"
                                htmlFor="input-country"
                              >
                                {index + 1 + ")"} {item.username} <i class="fa fa-trash text-danger ml-3" onClick={() => OndeletegeneralUser(item.id)}></i>
                              </p>
                            })
                          }

                        </FormGroup>
                      </Col>
                      <Col lg="6">
                        <FormGroup>
                          <label
                            className="form-control-label"
                            htmlFor="input-email"
                          >
                            User Profile
                          </label>
                         
                          <Input type="select" onChange={e => ProfileFind(e.target.value)} className='text-dark' name="select" id="exampleSelect">
                            <option value="" selected disabled>Select User Profile</option>
                            {userprofile.map((item, index) => {
                              return <option key={index} value={item.user_profile_name} className='text-dark'>{item.user_profile_name}</option>
                            })
                            }
                          </Input>
                          
                      <Col md="12">
                        <FormGroup>
                          {FindedData.map((item, index) => {
                             return <li className="table-borderless  text-justify text-dark" key={index} style={{ listStyle: "none" }} value={item.parameter}  >{index + 1}. {item.parameter}</li>
                            // return <p key={index} value={item.parameter} className='text-dark'>{item.parameter}</p>
                          })
                          }
                        </FormGroup>
                      </Col>
                        </FormGroup>
                      </Col>
                    </Row>
                    <Row>
                <Col>
                  {/* <button className='btn btn-warning'>Add</button> */}
                  <button className='btn btn-primary float-right' onClick={onSubmit}>submit</button>
                </Col>
              </Row>
                  </div>
                </Form>
              </CardBody>
            </Card>
          </Col>
        </Row>
      </Container>

    </>
  )
}




